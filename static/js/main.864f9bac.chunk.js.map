{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","components/Burger.js","sample-burgers.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","shipping","shippingNeon","React","Component","Order","renderOrder","burger","burgers","count","order","transitionOptions","classNames","timeout","enter","exit","isAvailable","status","CSSTransition","TransitionGroup","component","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","desc","image","addBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","updatedBurger","parseFloat","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogout","loadSampleBurgers","Burger","handleClick","addToOrder","details","disabled","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","measurementId","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"qNAoBeA,EAnBK,CAClB,CACEC,MAAO,qBACPC,IAAK,qBACLC,GAAI,GAGN,CACEF,MAAO,mBACPC,IAAK,mBACLC,GAAI,GAEN,CACEF,MAAO,mBACPC,IAAK,mBACLC,GAAI,IC+COC,EA3DC,SAACC,GAAW,IAAD,EAEQC,oBAAS,GAFjB,mBAElBC,EAFkB,KAETC,EAFS,OAGCF,mBAAS,IAHV,mBAGlBL,EAHkB,KAGXQ,EAHW,OAIHH,mBAAS,IAJN,mBAIlBJ,EAJkB,KAIbQ,EAJa,KAqBzB,OACE,yBAAKC,UAAU,qBACb,yBAAKA,UAAU,yBACb,yBACEC,QAnBY,WAClBJ,GAAeD,IAmBTI,UAAU,oDAETV,GAAgB,qBAEnB,yBAAKU,UAAU,gBACb,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,uBAEhBJ,EACC,yBAAKI,UAAU,4BACb,4BACGX,EAAYa,KAAI,SAACC,GAChB,OACE,wBAAIF,QAAS,kBA9BZ,SAACE,GAAgB,IACxBb,EAAea,EAAfb,MAAOC,EAAQY,EAARZ,IAEfO,EAASR,GACTS,EAAOR,GACPM,GAAc,GAyBmBO,CAASD,IAAaE,IAAKF,EAAWX,IACtDW,EAAWb,YAMpB,MAELA,IAAUM,EACT,4BAAQK,QAhCS,WACrBP,EAAMY,QAAQC,KAAd,qCAAiDhB,MA+B7C,oBACE,O,8DC1BKiB,EAxBA,SAACd,GAAD,OACb,4BAAQM,UAAU,OAChB,yBAAKA,UAAU,QACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBAAf,YACA,yBAAKA,UAAU,sBAAf,mCAEF,yBAAKA,UAAU,mBACf,wBAAIA,UAAU,8BAA8BN,EAAMJ,OAClD,4BACE,qCACM,0BAAMU,UAAU,cAAhB,WADN,uBCqBKS,E,4JA7Bb,WAAU,IACAC,EAAUC,KAAKjB,MAAfgB,MACFE,EAAWF,EAAQ,GAAKA,EAAQ,GAAK,IAAM,IAC3CG,EACS,MAAbD,EACE,0BAAMZ,UAAU,qCAAqCY,EAArD,UAEA,8BAAOA,EAAP,UAEJ,OACE,yBAAKZ,UAAU,SACb,yBAAKA,UAAU,cACb,6BACE,+CAAqBU,EAAQ,EAAIG,EAAe,MAChD,yBAAKb,UAAU,mBACZU,EAAQ,GAAR,oBAEK,GAAKA,EAFV,+CAIG,OAGR,yBAAKV,UAAU,oBAAf,UAA0CU,EAA1C,gB,GA1BaI,IAAMC,W,gBC0FdC,E,4MAhFbC,YAAc,SAACZ,GACb,IAAMa,EAAS,EAAKxB,MAAMyB,QAAQd,GAC5Be,EAAQ,EAAK1B,MAAM2B,MAAMhB,GACzBiB,EAAoB,CACpBC,WAAY,QACZlB,MACAmB,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7BC,EAAcT,GAA4B,cAAlBA,EAAOU,OAErC,OAAKV,EACAS,EAYH,kBAACE,EAAA,EACKP,EAEJ,wBAAIjB,IAAKA,GACP,8BACE,kBAACyB,EAAA,EAAD,CAAiBC,UAAU,OAAO/B,UAAU,SAC1C,kBAAC6B,EAAA,EAAD,CACAN,WAAW,QACXlB,IAAKe,EACLI,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAC3B,8BAAON,EAAP,aAGHF,EAAOc,KACR,kCAAQZ,EAAQF,EAAOe,MAAvB,UACA,4BACEhC,QAAS,kBAAM,EAAKP,MAAMwC,gBAAgB7B,IAC1CL,UAAU,cAFZ,WAzBJ,kBAAC6B,EAAA,EACKP,EAEJ,wBAAItB,UAAU,cAAcK,IAAKA,GAAjC,UACUa,EAASA,EAAOc,KAAO,SADjC,gCANc,M,4CAwCtB,WAAU,IAAD,OACDG,EAAWC,OAAOC,KAAK1B,KAAKjB,MAAM2B,OAClCX,EAAQyB,EAASG,QAAO,SAACC,EAAWlC,GACxC,IAAMa,EAAS,EAAKxB,MAAMyB,QAAQd,GAC5Be,EAAQ,EAAK1B,MAAM2B,MAAMhB,GAG/B,OADoBa,GAA4B,cAAlBA,EAAOU,OAE5BW,EAAYrB,EAAOe,MAAQb,EAE7BmB,IACN,GACH,OACE,yBAAKvC,UAAU,cACb,0CACA,kBAAC8B,EAAA,EAAD,CAAiBC,UAAU,KAAK/B,UAAU,SACvCmC,EAASjC,IAAIS,KAAKM,cAEpBP,EAAQ,EACP,kBAAC,EAAD,CAAUA,MAAOA,IAEjB,yBAAKV,UAAU,mBAAf,0C,GA/EUc,IAAMC,WCqDXyB,E,4MAnDbC,QAAU3B,IAAM4B,Y,EAChBC,SAAW7B,IAAM4B,Y,EACjBE,UAAY9B,IAAM4B,Y,EAClBG,QAAU/B,IAAM4B,Y,EAChBI,SAAWhC,IAAM4B,Y,EACjBK,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAM/B,EAAS,CACbc,KAAM,EAAKS,QAAQS,QAAQC,MAC3BlB,OAAQ,EAAKU,SAASO,QAAQC,OAAS,EACvCvB,OAAQ,EAAKgB,UAAUM,QAAQC,MAC/BC,KAAM,EAAKP,QAAQK,QAAQC,MAC3BE,MAAO,EAAKP,SAASI,QAAQC,OAE/B,EAAKzD,MAAM4D,UAAUpC,GACrB8B,EAAMO,cAAcC,S,4CAEtB,WACE,OACE,0BAAMxD,UAAU,cAAcyD,SAAU9C,KAAKoC,cAC3C,2BACEW,IAAK/C,KAAK8B,QACVT,KAAK,OACL2B,KAAK,OACLC,YAAY,OACZC,aAAa,QAEf,2BACEH,IAAK/C,KAAKgC,SACVX,KAAK,QACL2B,KAAK,OACLC,YAAY,QACZC,aAAa,QAEf,4BAAQH,IAAK/C,KAAKiC,UAAW5C,UAAU,SAASgC,KAAK,UACnD,4BAAQmB,MAAM,aAAd,aACA,4BAAQA,MAAM,eAAd,qBAEF,8BAAUO,IAAK/C,KAAKkC,QAASb,KAAK,OAAO4B,YAAY,SACrD,2BACEF,IAAK/C,KAAKmC,SACVd,KAAK,QACL2B,KAAK,OACLC,YAAY,UAEd,4BAAQD,KAAK,UAAb,oB,GAlDoB7C,IAAMC,W,QCwCnB+C,E,4MAzBXC,aAAe,SAAAf,GACX,IAAMgB,EAAa,2BACZ,EAAKtE,MAAMwB,QADC,kBAEd8B,EAAMO,cAAcvB,KAAoC,UAA7BgB,EAAMO,cAAcvB,KAAmBiC,WAAWjB,EAAMO,cAAcJ,QAAU,EAAIH,EAAMO,cAAcJ,QAExI,EAAKzD,MAAMwE,aAAa,EAAKxE,MAAMyE,MAAOH,I,4CAE9C,WAAW,IAAD,OACN,OACI,yBAAKhE,UAAU,eACX,2BAAOoE,SAAUzD,KAAKoD,aAAc/B,KAAK,OAAO2B,KAAK,OAAOR,MAAOxC,KAAKjB,MAAMwB,OAAOc,OACrF,2BAAOoC,SAAUzD,KAAKoD,aAAc/B,KAAK,QAAQ2B,KAAK,OAAOR,MAAOxC,KAAKjB,MAAMwB,OAAOe,QACtF,4BAAQmC,SAAUzD,KAAKoD,aAAc/D,UAAU,SAASgC,KAAK,SAAQmB,MAAOxC,KAAKjB,MAAMwB,OAAOU,QAC1F,4BAAQuB,MAAM,aAAd,aACA,4BAAQA,MAAM,eAAd,gBAEJ,8BAAUiB,SAAUzD,KAAKoD,aAAc/B,KAAK,OAAO2B,KAAK,OAAOR,MAAOxC,KAAKjB,MAAMwB,OAAOkC,OACxF,2BAAOgB,SAAUzD,KAAKoD,aAAc/B,KAAK,QAAQ2B,KAAK,OAAOR,MAAOxC,KAAKjB,MAAMwB,OAAOmC,QAC5F,4BAAQpD,QAAS,kBAAM,EAAKP,MAAM2E,aAAa,EAAK3E,MAAMyE,SAA1D,yB,GAhCmBrD,IAAMC,W,QCmEpBuD,E,4MA/DbC,MAAQ,CACNC,MAAO,GACPC,KAAM,I,EAkBRC,Y,uCAAc,WAAOC,GAAP,mBAAAC,EAAA,wDACgBD,EAASF,KAA7BI,EADI,EACJA,MAAOC,EADH,EACGA,SACf,EAAKC,SAAS,CACZN,KAAMI,EACNL,MAAOM,IAJG,2C,6GARd,WAAqB,IAAD,OAClBE,UAASC,OAAOC,oBAAmB,SAACT,GAC9BA,GACF,EAAKC,YAAY,CAAED,c,oBAazB,WAAU,IAAD,SACiB9D,KAAK4D,MAArBE,EADD,EACCA,KAAMD,EADP,EACOA,MACRW,EAASX,GAAgB,qBAC/B,OACE,yBAAKxE,UAAU,cACZyE,EACC,yBAAKzE,UAAU,gBACb,yBAAKA,UAAU,UACb,yBAAKoF,IAAKD,EAAQE,IAAKZ,KAEzB,4BAAQxE,QAASU,KAAKjB,MAAM4F,aAActF,UAAU,gBAApD,SAIA,KAEJ,4CACCoC,OAAOC,KAAK1B,KAAKjB,MAAMyB,SAASjB,KAAI,SAACG,GACpC,OACE,kBAAC,EAAD,CACEA,IAAKA,EACL8D,MAAO9D,EACPgE,aAAc,EAAK3E,MAAM2E,aACzBnD,OAAQ,EAAKxB,MAAMyB,QAAQd,GAC3B6D,aAAc,EAAKxE,MAAMwE,kBAI/B,kBAAC,EAAD,CAAeZ,UAAW3C,KAAKjB,MAAM4D,YACrC,4BAAQrD,QAASU,KAAKjB,MAAM6F,mBAA5B,oB,GA1DgBzE,IAAMC,WCuCfyE,E,4MA/BbC,YAAc,WACZ,EAAK/F,MAAMgG,WAAW,EAAKhG,MAAMyE,Q,4CAGnC,WAAU,IAAD,EACsCxD,KAAKjB,MAAMiG,QAAhDtC,EADD,EACCA,MAAOrB,EADR,EACQA,KAAMC,EADd,EACcA,MAAOmB,EADrB,EACqBA,KACtBzB,EAAyB,cAFxB,EAC2BC,OAElC,OACE,wBAAI5B,UAAU,eACZ,yBAAKA,UAAU,mBACb,yBAAKoF,IAAK/B,EAAOgC,IAAKhC,KAExB,yBAAKrD,UAAU,kBACb,wBAAIA,UAAU,eACXgC,EACD,0BAAMhC,UAAU,SAASiC,EAAzB,YAEF,2BAAImB,GACJ,4BACEnD,QAASU,KAAK8E,YACdzF,UAAU,cACV4F,UAAWjE,GAEVA,EAAc,QAAU,sB,GAnChBb,IAAMC,WCkFZ8E,EAnFO,CACpBC,QAAS,CACP9D,KAAM,eACNqB,MAAO,qBACPD,KACE,6EACFnB,MAAO,IACPL,OAAQ,aAGVmE,QAAS,CACP/D,KAAM,gBACNqB,MAAO,sBACPD,KACE,mEACFnB,MAAO,EACPL,OAAQ,aAGVoE,QAAS,CACPhE,KAAM,mBACNqB,MAAO,qBACPD,KACE,mFACFnB,MAAO,GACPL,OAAQ,eAGVqE,QAAS,CACPjE,KAAM,aACNqB,MAAO,mBACPD,KACE,mGACFnB,MAAO,IACPL,OAAQ,aAGVsE,QAAS,CACPlE,KAAM,eACNqB,MAAO,oBACPD,KACE,wFACFnB,MAAO,KACPL,OAAQ,aAGVuE,QAAS,CACPnE,KAAM,cACNqB,MAAO,kBACPD,KACE,iHACFnB,MAAO,GACPL,OAAQ,aAGVwE,QAAS,CACPpE,KAAM,cACNqB,MAAO,mBACPD,KACE,+FACFnB,MAAO,GACPL,OAAQ,aAGVyE,QAAS,CACPrE,KAAM,iBACNqB,MAAO,mBACPD,KACE,8GACFnB,MAAO,GACPL,OAAQ,aAGV0E,QAAS,CACPtE,KAAM,eACNqB,MAAO,yBACPD,KACE,qFACFnB,MAAO,IACPL,OAAQ,c,iBC3EN2E,G,YAAcvB,UAASwB,cAAc,CACzCC,OAAQ,0CACRC,WAAY,4BACZC,YACE,0EACFC,cAAe,kBAKFC,EAFFC,IAAOC,YAAYR,EAAYS,YCQ7BC,EAlBD,SAACvH,GACb,OACE,yBAAKM,UAAU,mBACb,yBAAKA,UAAU,SACb,oCACA,2EACA,4BAAQA,UAAU,SAASC,QAAS,kBAAMP,EAAMwH,iBAAhD,YC4BOC,E,4MA9Bb5C,MAAQ,CACNE,KAAM,I,EAWRC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sDACJC,EAAUF,EAASF,KAAnBI,MACR,EAAKE,SAAS,CAAEN,KAAMI,IAFV,2C,wDAKdqC,aAAe,WACb,IAAME,EAAe,IAAIpC,UAASC,KAAT,mBACzBsB,EAAYtB,OAAOoC,gBAAgBD,GAAcE,KAAK,EAAK5C,c,uDAf7D,WAAqB,IAAD,OAClBM,UAASC,OAAOC,oBAAmB,SAACT,GAC9BA,GACF,EAAKC,YAAY,CAAED,c,oBAezB,WACE,OAAK9D,KAAK4D,MAAME,KAGT9D,KAAKjB,MAAM6H,SAFT,kBAAC,EAAD,CAAOL,aAAcvG,KAAKuG,mB,GAzBlBpG,IAAMC,WCiHZyG,E,4MAvGbjD,MAAQ,CACNpD,QAAS,GACTE,MAAO,I,EAyBTiC,UAAY,SAACpC,GACX,IAAMC,EAAO,eAAQ,EAAKoD,MAAMpD,SAChCA,EAAQ,SAAD,OAAUsG,KAAKC,QAAWxG,EACjC,EAAK6D,SAAS,CAAE5D,a,EAGlB+C,aAAe,SAAC7D,EAAK2D,GACnB,IAAM7C,EAAO,eAAQ,EAAKoD,MAAMpD,SAChCA,EAAQd,GAAO2D,EACf,EAAKe,SAAS,CAAE5D,a,EAElBkD,aAAe,SAAChE,GACd,IAAMc,EAAO,eAAQ,EAAKoD,MAAMpD,SAChCA,EAAQd,GAAO,KACf,EAAK0E,SAAS,CAAE5D,a,EAGlBoE,kBAAoB,WAClB,EAAKR,SAAS,CAAE5D,QAAS0E,K,EAG3BH,WAAa,SAACrF,GACZ,IAAMgB,EAAK,eAAQ,EAAKkD,MAAMlD,OAC9BA,EAAMhB,GAAOgB,EAAMhB,GAAO,GAAK,EAC/B,EAAK0E,SAAS,CAAE1D,W,EAGlBa,gBAAkB,SAAC7B,GACjB,IAAMgB,EAAK,eAAQ,EAAKkD,MAAMlD,cACvBA,EAAMhB,GACb,EAAK0E,SAAS,CAAE1D,W,EAGlBiE,a,sBAAe,sBAAAV,EAAA,sEACPI,UAASC,OAAO0C,UADT,OAEbC,OAAOC,SAASC,SAFH,2C,uDAvDf,WAAqB,IACXC,EAAWpH,KAAKjB,MAAMsI,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOK,cAChDH,GACFtH,KAAKoE,SAAS,CAAE1D,MAAOgH,KAAKC,MAAML,KAEpCtH,KAAK+C,IAAMmD,EAAK0B,UAAL,UAAkBR,EAAOK,aAAzB,YAAiD,CAC1DI,QAAS7H,KACT4D,MAAO,c,gCAIX,WAAsB,IACZwD,EAAWpH,KAAKjB,MAAMsI,MAAtBD,OACRG,aAAaO,QAAQV,EAAOK,aAAcC,KAAKK,UAAU/H,KAAK4D,MAAMlD,U,kCAGtE,WACEwF,EAAK8B,cAAchI,KAAK+C,O,oBAyC1B,WAAU,IAAD,OACP,OACE,kBAAC,EAAD,KACE,yBAAK1D,UAAU,mBACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAQV,MAAM,oBACd,wBAAIU,UAAU,WACXoC,OAAOC,KAAK1B,KAAK4D,MAAMpD,SAASjB,KAAI,SAACG,GACpC,OACE,kBAAC,EAAD,CACE8D,MAAO9D,EACPA,IAAKA,EACLqF,WAAY,EAAKA,WACjBC,QAAS,EAAKpB,MAAMpD,QAAQd,UAMtC,kBAAC,EAAD,CACE6B,gBAAiBvB,KAAKuB,gBACtBf,QAASR,KAAK4D,MAAMpD,QACpBE,MAAOV,KAAK4D,MAAMlD,QAEpB,kBAAC,EAAD,CACEiC,UAAW3C,KAAK2C,UAChBiC,kBAAmB5E,KAAK4E,kBACxBpE,QAASR,KAAK4D,MAAMpD,QACpB+C,aAAcvD,KAAKuD,aACnBG,aAAc1D,KAAK0D,aACnBiB,aAAc3E,KAAK2E,qB,GApGbxE,IAAMC,WCAT6H,EARE,WACb,OACI,6BACI,uD,eCaGC,EAZA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBhH,UAAWtC,IAC/C,kBAAC,IAAD,CAAOsJ,KAAK,2CAA2ChH,UAAWyF,IAClE,kBAAC,IAAD,CAAOzF,UAAW6G,O,MCRlCI,iBAAO,kBAAC,EAAD,MAAWC,SAASC,cAAc,Y","file":"static/js/main.864f9bac.chunk.js","sourcesContent":["// Our restaurants\nconst restaurants = [\n  {\n    title: 'Hot Burger Tallinn',\n    url: 'hot-burger-tallinn',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Tartu',\n    url: 'hot-burger-tartu',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Narva',\n    url: 'hot-burger-narva',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, { useState } from \"react\";\nimport restaurants from \"../sample-restaurants\";\nimport PropTypes from \"prop-types\";\n\nconst Landing = (props) => {\n\n  const [display, toggleDisplay] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  const displayList = () => {\n    toggleDisplay(!display);\n  };\n  const getTitle = (restaurant) => {\n    const { title, url } = restaurant;\n\n    setTitle(title);\n    setUrl(url);\n    toggleDisplay(false);\n  };\n\n  const goToRestaurant = () => {\n    props.history.push(`/react-food-app/restaurant/${url}`);\n  };\n\n  return (\n    <div className=\"restaurant_select\">\n      <div className=\"restaurant_select_top\">\n        <div\n          onClick={displayList}\n          className=\"restaurant_select_top-header font-effect-outline\"\n        >\n          {title ? title : \"Choose restaurant\"}\n        </div>\n        <div className=\"arrow_picker\">\n          <div className=\"arrow_picker-up\"></div>\n          <div className=\"arrow_picker-down\"></div>\n        </div>\n        {display ? (\n          <div className=\"restaurant_select_bottom\">\n            <ul>\n              {restaurants.map((restaurant) => {\n                return (\n                  <li onClick={() => getTitle(restaurant)} key={restaurant.id}>\n                    {restaurant.title}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        ) : null}\n      </div>\n      {title && !display ? (\n        <button onClick={goToRestaurant}>Go to restaurant</button>\n      ) : null}\n    </div>\n  );\n};\n\nLanding.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default Landing;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst Header = (props) => (\n  <header className=\"top\">\n    <div className=\"wrap\">\n      <div className=\"header-content\">\n        <div className=\"header-rating\">\n          <div className=\"header-rating_tag\">Rating: </div>\n          <div className=\"header-rating_icon\">★★★★★</div>\n        </div>\n        <div className=\"header-divider\"></div>\n        <h1 className=\"font-effect-fire-animation\">{props.title}</h1>\n        <h3>\n          <span>\n            Hot <span className=\"sub-header\">burgers</span> fast delivery\n          </span>\n        </h3>\n      </div>\n    </div>\n  </header>\n);\n\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Shipment extends React.Component {\n  static propTypes = {\n    total: PropTypes.number,\n  };\n  render() {\n    const { total } = this.props;\n    const shipping = total > 0 && total < 20 ? 3.5 : 0.99;\n    const shippingNeon =\n      shipping === 0.99 ? (\n        <span className=\"font-effect-neon total_wrap-cheap\">{shipping}€</span>\n      ) : (\n        <span>{shipping}€</span>\n      );\n    return (\n      <div className=\"total\">\n        <div className=\"total_wrap\">\n          <div>\n            <div>Delivery cost: {total > 0 ? shippingNeon : null}</div>\n            <div className=\"total_wrap-free\">\n              {total < 20\n                ? `Order for ${\n                    20 - total\n                  } more euros and get delivery for 0.99 euros`\n                : null}\n            </div>\n          </div>\n          <div className=\"total_wrap-final\">Total: {total}€</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Shipment;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Shipment from \"./Shipment\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nclass Order extends React.Component {\n\n  static propTypes = {\n    burgers: PropTypes.object,\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func,\n  };\n\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n    const transitionOptions = {\n          classNames: \"order\",\n          key,\n          timeout: { enter: 500, exit: 500 }\n    }\n    const isAvailable = burger && burger.status === \"available\";\n\n    if (!burger) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition\n          {...transitionOptions}\n        >\n          <li className=\"unavailable\" key={key}>\n            Sorry, {burger ? burger.name : \"burger\"} is temporarily unavailable\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition\n        {...transitionOptions}\n      >\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition \n              classNames=\"count\" \n              key={count} \n              timeout={{ enter: 500, exit: 500 }}>\n                <span>{count}pcs&nbsp;</span>\n              </CSSTransition>\n            </TransitionGroup>\n            {burger.name}\n            <span> {count * burger.price}€</span>\n            <button\n              onClick={() => this.props.deleteFromOrder(key)}\n              className=\"cancelItem\"\n            >\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        {total > 0 ? (\n          <Shipment total={total} />\n        ) : (\n          <div className=\"nothingSelected\">\n            Choose something and add to order\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nclass AddBurgerForm extends React.Component {\n  static propTypes = {\n    AddBurgerForm: PropTypes.func,\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n  createBurger = (event) => {\n    event.preventDefault();\n    const burger = {\n      name: this.nameRef.current.value,\n      price: +this.priceRef.current.value || 0,\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addBurger(burger);\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"burger-edit\" onSubmit={this.createBurger}>\n        <input\n          ref={this.nameRef}\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          autoComplete=\"off\"\n        />\n        <input\n          ref={this.priceRef}\n          name=\"price\"\n          type=\"text\"\n          placeholder=\"Price\"\n          autoComplete=\"off\"\n        />\n        <select ref={this.statusRef} className=\"status\" name=\"status\">\n          <option value=\"available\">Available</option>\n          <option value=\"unavailable\">Delete from menu</option>\n        </select>\n        <textarea ref={this.descRef} name=\"desc\" placeholder=\"Desc\" />\n        <input\n          ref={this.imageRef}\n          name=\"image\"\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">Add to menu</button>\n      </form>\n    );\n  }\n}\n\nexport default AddBurgerForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditBurgerForm extends React.Component {\n\n    static propTypes = {\n        burger: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            price: PropTypes.number,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n          }),\n          index: PropTypes.string,\n          updateBurger: PropTypes.func,\n          deleteBurger: PropTypes.func,\n      }; \n    handleChange = event => {\n        const updatedBurger = {\n            ...this.props.burger, \n            [event.currentTarget.name]: event.currentTarget.name === \"price\" ? parseFloat(event.currentTarget.value) || 0 : event.currentTarget.value\n        }\n        this.props.updateBurger(this.props.index, updatedBurger)\n    } \n    render () {\n        return (\n            <div className='burger-edit'>\n                <input onChange={this.handleChange} name=\"name\" type='text' value={this.props.burger.name}/>\n                <input onChange={this.handleChange} name=\"price\" type='text' value={this.props.burger.price}/>\n                <select onChange={this.handleChange} className=\"status\" name=\"status\"value={this.props.burger.status}>\n                    <option value=\"available\">available</option>\n                    <option value=\"unavailable\">unavailable</option>\n                </select>\n                <textarea onChange={this.handleChange} name=\"desc\" type='text' value={this.props.burger.desc}/>\n                <input onChange={this.handleChange} name=\"image\" type='text' value={this.props.burger.image}/>\n          <button onClick={() => this.props.deleteBurger(this.props.index)}>Delete from menu</button>\n                \n            </div>\n        );\n    }\n}\n\nexport default EditBurgerForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddBurgerForm from \"./AddBurgerForm\";\nimport EditBurgerForm from \"./EditBurgerForm\";\nimport firebase from \"firebase/app\";\n// import { firebaseApp } from \"../../base\";\nclass MenuAdmin extends React.Component {\n  state = {\n    photo: \"\",\n    user: \"\",\n  };\n  static propTypes = {\n    burgers: PropTypes.object,\n    deleteBurger: PropTypes.func,\n    updateBurger: PropTypes.func,\n    addBurger: PropTypes.func,\n    loadSampleBurgers: PropTypes.func,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { email, photoURL } = authData.user;\n    this.setState({\n      user: email,\n      photo: photoURL,\n    });\n  };\n\n  render() {\n    const { user, photo } = this.state;\n    const avatar = photo ? photo : \"/images/avatar.png\";\n    return (\n      <div className=\"menu-admin\">\n        {user ? (\n          <div className=\"login-header\">\n            <div className=\"avatar\">\n              <img src={avatar} alt={user} />\n            </div>\n            <button onClick={this.props.handleLogout} className=\"buttonLogout\">\n              Exit\n            </button>\n          </div>\n        ) : null}\n\n        <h2>Menu control</h2>\n        {Object.keys(this.props.burgers).map((key) => {\n          return (\n            <EditBurgerForm\n              key={key}\n              index={key}\n              deleteBurger={this.props.deleteBurger}\n              burger={this.props.burgers[key]}\n              updateBurger={this.props.updateBurger}\n            />\n          );\n        })}\n        <AddBurgerForm addBurger={this.props.addBurger} />\n        <button onClick={this.props.loadSampleBurgers}>Add burgers</button>\n      </div>\n    );\n  }\n}\n\nexport default MenuAdmin;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nclass Burger extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    addToOrder: PropTypes.func,\n  };\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-burger\">\n        <div className=\"image-container\">\n          <img src={image} alt={image} />\n        </div>\n        <div className=\"burger-details\">\n          <h3 className=\"burger-name\">\n            {name}\n            <span className=\"price\">{price} €</span>\n          </h3>\n          <p>{desc}</p>\n          <button\n            onClick={this.handleClick}\n            className=\"buttonOrder\"\n            disabled={!isAvailable}\n          >\n            {isAvailable ? \"Order\" : \"Out of stock\"}\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Burger;\n","// Our menu\nconst sampleBurgers = {\n  burger1: {\n    name: 'Cheeseburger',\n    image: '/images/cheese.jpg',\n    desc:\n      'Classic 100% beef steak burger with pickled cucumbers and fresh wheat bun.',\n    price: 5.5,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Chickenburger',\n    image: '/images/chicken.jpg',\n    desc:\n      'Chicken burger topped with melted cheese, BBQ sauce and lettuce.',\n    price: 7,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Double Hamburger',\n    image: '/images/double.jpg',\n    desc:\n      'Double hamburger with 100% beef steak and melted cheddar cheese and spicy sauce.',\n    price: 10,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Fishburger',\n    image: '/images/fish.jpg',\n    desc:\n      'Top quality fish fillet with leaf lettuce, pickled cucumbers and seasoned with light mayonnaise.',\n    price: 7.5,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'French fries',\n    image: '/images/fries.jpg',\n    desc:\n      'Crispy Golden Hot Potato Super Fry Slices Made From Selected Organic Root Vegetables!',\n    price: 4.25,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Burger',\n    image: '/images/ham.jpg',\n    desc:\n      '100% selected beef burger with fried bacon slices and fresh melted cheese dressed with ketchup and mayonnaise.',\n    price: 17,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Mega Burger',\n    image: '/images/mega.jpg',\n    desc:\n      'Our largest burger ever made with fresh steak topped with melted cheddar cheese and pickles.',\n    price: 20,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Burger in Pete',\n    image: '/images/pita.jpg',\n    desc:\n      'Four 100% beef patties topped with melted Cheddar cheese with fresh leaf lettuce in a fresh wheat tortilla.',\n    price: 15,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Free',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'A portion of fresh potato slices baked in France under peacefully smoldering coals',\n    price: 4.5,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDE5Jw52Ys4uQlbK0i73krAr-20Ep9yweI\",\n  authDomain: \"https://erikegl.github.io\",\n  databaseURL:\n    \"https://burger-app-75e1d-default-rtdb.europe-west1.firebasedatabase.app\",\n  measurementId: \"G-YGFGNDH8X0\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\nexport { firebaseApp };\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => {\n  return (\n    <div className=\"login-container\">\n      <nav className=\"login\">\n        <h2>Auth</h2>\n        <p>Enter your Github account login and password</p>\n        <button className=\"github\" onClick={() => props.authenticate()}>\n          Enter\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"./Login\";\nimport firebase from \"firebase/app\";\nimport { firebaseApp } from \"../../base\";\nimport PropTypes from \"prop-types\";\n\nclass SignIn extends React.Component {\n  state = {\n    user: \"\",\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { email } = authData.user;\n    this.setState({ user: email });\n  };\n\n  authenticate = () => {\n    const authProvider = new firebase.auth[\"GithubAuthProvider\"]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  render() {\n    if (!this.state.user) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    return this.props.children;\n  }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Burger from \"./Burger\";\nimport sampleBurgers from \"../sample-burgers\";\nimport base from \"../base\";\nimport firebase from \"firebase/app\";\nimport SignIn from \"./Auth/SignIn\";\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n      context: this,\n      state: \"burgers\",\n    });\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addBurger = (burger) => {\n    const burgers = { ...this.state.burgers };\n    burgers[`burger${Date.now()}`] = burger;\n    this.setState({ burgers });\n  };\n\n  updateBurger = (key, updatedBurger) => {\n    const burgers = { ...this.state.burgers };\n    burgers[key] = updatedBurger;\n    this.setState({ burgers });\n  };\n  deleteBurger = (key) => {\n    const burgers = { ...this.state.burgers };\n    burgers[key] = null;\n    this.setState({ burgers });\n  };\n\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n\n  addToOrder = (key) => {\n    const order = { ...this.state.order };\n    order[key] = order[key] + 1 || 1;\n    this.setState({ order });\n  };\n\n  deleteFromOrder = (key) => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({ order });\n  };\n\n  handleLogout = async () => {\n    await firebase.auth().signOut();\n    window.location.reload()\n  };\n\n  render() {\n    return (\n      <SignIn>\n        <div className=\"burger-paradise\">\n          <div className=\"menu\">\n            <Header title=\"Very Hot Burger\" />\n            <ul className=\"burgers\">\n              {Object.keys(this.state.burgers).map((key) => {\n                return (\n                  <Burger\n                    index={key}\n                    key={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers}\n            order={this.state.order}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updateBurger={this.updateBurger}\n            deleteBurger={this.deleteBurger}\n            handleLogout={this.handleLogout}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\n\nconst NotFound = () => {\n    return(\n        <div>\n            <h2>The page is not found</h2>\n        </div>\n\n    )\n}\nexport default NotFound;\n","import React from \"react\";\nimport Landing from \"./Landing\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\n\nconst Router = () => {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/react-food-app' component={Landing} />\n                <Route path='/react-food-app/restaurant/:restaurantId' component={App} />\n                <Route component={NotFound} />\n            </Switch>\n        </BrowserRouter>\n\n    )\n}\nexport default Router;\n","import React from \"react\";\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router/>, document.querySelector('#root'));"],"sourceRoot":""}